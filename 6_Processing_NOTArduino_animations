import processing.serial.*;

Serial myPort;
String incoming = "";

int mode = 0; // 0 = idle, 1 = red, 2 = yellow, 3 = green

float angle = 0; // for funky animations

void setup() {
  size(800, 600);
  
  // --- SHOW AVAILABLE SERIAL PORTS ---
  println("Available serial ports:");
  String[] ports = Serial.list();
  for (int i = 0; i < ports.length; i++) {
    println("(" + i + ") " + ports[i]);
  }
  
  // --- SELECT YOUR PORT BELOW ---
  // After you find the correct one, uncomment and set the index number:
//myPort = new Serial(this, Serial.list()[0], 9600);
  
  textAlign(CENTER, CENTER);
  textSize(120);
}

void draw() {
  background(0);
  
  // --- READ SERIAL INPUT ---
  if (myPort != null && myPort.available() > 0) {
    incoming = myPort.readStringUntil('\n');
    if (incoming != null) {
      incoming = trim(incoming);
      println("Received: " + incoming);
      
      if (incoming.equals("1")) mode = 1;
      else if (incoming.equals("2")) mode = 2;
      else if (incoming.equals("3")) mode = 3;
    }
  }
  
  // --- ANIMATION SELECTION ---
  switch (mode) {
    case 1:
      funkyRed();
      break;
    case 2:
      funkyYellow();
      break;
    case 3:
      funkyGreen();
      break;
    default:
      fill(150);
      text("Waiting for 1, 2, or 3", width/2, height/2);
      break;
  }
}

void funkyRed() {
  background(120 + 80*sin(frameCount*0.05), 0, 0);
  fill(255, 60, 60);
  text("1", width/2 + sin(frameCount*0.1)*100, height/2 + cos(frameCount*0.2)*50);
  
  noStroke();
  for (int i = 0; i < 30; i++) {
    float x = random(width);
    float y = random(height);
    fill(255, random(80, 150), random(80, 120), 150);
    ellipse(x, y, random(10, 40), random(10, 40));
  }
}

void funkyYellow() {
  background(180 + 50*sin(frameCount*0.05), 180 + 50*cos(frameCount*0.1), 0);
  fill(255, 255, 0);
  text("2", width/2, height/2);
  noStroke();
  for (int i = 0; i < 20; i++) {
    float r = abs(sin(frameCount*0.05 + i)) * 100;
    fill(255, 255, random(50, 200), 150);
    ellipse(width/2 + cos(frameCount*0.1 + i)*r, height/2 + sin(frameCount*0.1 + i)*r, r, r);
  }
}

void funkyGreen() {
  background(0, 150 + 100*sin(frameCount*0.05), 0);
  pushMatrix();
  translate(width/2, height/2);
  rotate(radians(angle));
  fill(0, 255, 0);
  text("3", 0, 0);
  popMatrix();
  
  stroke(0, 255, 0);
  for (int i = 0; i < 8; i++) {
    float x = width/2 + cos(radians(angle + i*45))*200;
    float y = height/2 + sin(radians(angle + i*45))*200;
    line(width/2, height/2, x, y);
  }
  angle += 2;
}
